<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>uk.co.andyfennell.springboot</groupId>
	<artifactId>springbootexample</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>springBootExample</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.main.class>uk.co.andyfennell.springboot.Application</project.main.class>
		<docker.maven.plugin.version>0.22.1</docker.maven.plugin.version>
		<!-- To be able to interpolate the value on the Dockerfile. Waiting for
			https://github.com/fabric8io/docker-maven-plugin/pull/877 to be merged. -->
		<project.build.finalName>${project.build.finalName}</project.build.finalName>
		<surefire.useSystemClassLoader>false</surefire.useSystemClassLoader>
		<failsafe.useSystemClassLoader>false</failsafe.useSystemClassLoader>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
	</parent>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
	-->
	</dependencies>
	<scm>
    <developerConnection>scm:git:https://github.com/Aardyvark/springboot</developerConnection>
  </scm>
	<distributionManagement>
    <repository>
      <id>nexus</id>
      <name>Nexus Releases</name>
      <url>http://192.168.0.9:8181/nexus/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>nexus</id>
      <name>Nexus Snapshot</name>
      <url>http://192.168.0.9:8181/repository/maven-snapshots</url>
    </snapshotRepository>
<!--
    <site>
      <id>nexus</id>
      <name>Nexus Sites</name>
      <url>dav:http://localhost:8181/nexus/content/sites/site/</url>
    </site>
-->
  </distributionManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
<!--
      		<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-release-plugin</artifactId>
        		<version>2.5.3</version>
      		</plugin>
-->
			<!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>-->
				<!--<version>2.22.1</version>-->
				<!--<configuration>-->
		        <!--<useSystemClassLoader>false</useSystemClassLoader>-->
						<!--<argLine>@{argLine} -Dsurefire.useSystemClassLoader=false</argLine>-->
		    <!--</configuration>-->
      <!--</plugin>-->
	  		<plugin>
	      		<groupId>org.codehaus.mojo</groupId>
	      		<artifactId>build-helper-maven-plugin</artifactId>
	      		<version>1.9.1</version>
	      		<executions>
					<!-- Add a new source directory to our build -->
					<execution>
				    	<id>add-integration-test-sources</id>
				    	<phase>generate-test-sources</phase>
				    	<goals>
				        	<goal>add-test-source</goal>
				    	</goals>
				    	<configuration>
				        	<!-- Configures the source directory of our integration tests -->
				        	<sources>
				            	<source>src/integration-test/java</source>
				        	</sources>
				    	</configuration>
					</execution>
					<!-- Add a new resource directory to our build -->
					<execution>
				    	<id>add-integration-test-resources</id>
				    	<phase>generate-test-resources</phase>
				    	<goals>
				        	<goal>add-test-resource</goal>
				    	</goals>
				    	<configuration>
				        	<!-- Configures the resource directory of our integration tests -->
				        	<resources>
				            	<!--
				                	Placeholders that are found from the files located in the configured resource
				                	directories are replaced with the property values found from the profile
				                	specific configuration file.
				            	-->
				            	<resource>
				                	<!--<filtering>true</filtering>-->
				                	<directory>src/integration-test/resources</directory>
				            	</resource>
				        	</resources>
				    	</configuration>
					</execution>
	      		</executions>
	  		</plugin>
			<plugin>
			    <groupId>pl.project13.maven</groupId>
			    <artifactId>git-commit-id-plugin</artifactId>
			    <version>2.2.4</version>
			    <executions>
			        <execution>
			            <id>get-the-git-infos</id>
			            <goals>
			                <goal>revision</goal>
			            </goals>
			        </execution>
			    </executions>
			    <configuration>
			        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
			        <prefix>git</prefix>
			        <verbose>false</verbose>
			        <generateGitPropertiesFile>true</generateGitPropertiesFile>
			        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
			        <format>json</format>
			        <gitDescribe>
			            <skip>false</skip>
			            <always>false</always>
			            <dirty>-dirty</dirty>
			        </gitDescribe>
			    </configuration>
			</plugin>

			<plugin>
		      <!-- Separates the unit tests from the integration tests. -->
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-surefire-plugin</artifactId>
		      <configuration>
		         <!-- Skip the default running of this plug-in (or everything is run twice...see below) -->
		         <skip>true</skip>
		         <!-- Show 100% of the lines from the stack trace (doesn't work) -->
		         <trimStackTrace>false</trimStackTrace>
		      </configuration>
		      <executions>
		         <execution>
		            <id>unit-tests</id>
		            <phase>test</phase>
		            <goals>
		               <goal>test</goal>
		            </goals>
		            <configuration>
		                  <!-- Never skip running the tests when the test phase is invoked -->
		                  <skip>false</skip>
		               <includes>
		                     <!-- Include unit tests within integration-test phase. -->
		                  <include>**/*Test.java</include>
		               </includes>
		               <excludes>
		                 <!-- Exclude integration tests within (unit) test phase. -->
		                  <exclude>**/*IT.java</exclude>
		              </excludes>
		            </configuration>
		         </execution>
<!--
		         <execution>
		            <id>integration-tests</id>
		            <phase>integration-test</phase>
		            <goals>
		               <goal>test</goal>
		            </goals>
		            <configuration>
-->
		              <!-- Never skip running the tests when the integration-test phase is invoked -->
<!--
		               <skip>false</skip>
		               <includes>
-->
		                 <!-- Include integration tests within integration-test phase. -->
<!--
		                 <include>**/*IT.java</include>
		               </includes>
		            </configuration>
		         </execution>
-->
		      </executions>
		    </plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <version>2.18</version>
			    <executions>
			        <!--
			            Invokes both the integration-test and the verify goals of the
			            Failsafe Maven plugin
			        -->
			        <execution>
			            <!--<id>integration-tests</id>-->
<!--
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
-->						
			            <configuration>
			                <!--
			                    Skips integration tests if the value of skip.integration.tests
			                    property is true
			                -->
			                <skipTests>false</skipTests>
							<includes>
	 		                	<!-- Include unit tests within integration-test phase. -->
	 		                	<include>**/*IT.java</include>
	 		               	</includes>
	 		               	<excludes>
	 		                	<!-- Exclude integration tests within (unit) test phase. -->
	 		                	<exclude>**/*Test.java</exclude>
	 		              	</excludes>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${project.main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
-->
<!-- plugin not needed for trival app, without dependencies -->
<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
-->
<!--
			<plugin>
		    <groupId>io.fabric8</groupId>
		    <artifactId>docker-maven-plugin</artifactId>
		    <version>0.29.0</version>
		    <configuration>
	        <images>
            <image>
-->
              <!--<name>localhost:32800/%g/%a:%v</name>-->
<!--
							<name>%g/%a:%v</name>
-->
<!--											<name>localhost:32800/helloworld:0.1</name>-->
<!--
								<build>
									<dockerFile>${project.basedir}/Dockerfile</dockerFile>
									<assembly>
										<descriptorRef>artifact</descriptorRef>
										<name>output</name>
									</assembly>
								</build>
-->
<!--
											<run>
												<ports>
													<port>8080:8080</port>
												</ports>
											</run>
-->
<!--
	          </image>
	        </images>
	    	</configuration>
-->
<!-- prevent this from running in package phase -->
<!--
				<executions>
			  	<execution>
			    	<id>docker:build</id>
			      <phase>package</phase>
			      <goals>
			      	<goal>build</goal>
			      </goals>
			    </execution>
			  </executions>
-->
<!--
			</plugin>
-->
		</plugins>
	</build>
	<reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <!--<version>2.22.1</version>-->
				<!--
				<configuration>
		        <useSystemClassLoader>false</useSystemClassLoader>
		    </configuration>
			-->
      </plugin>
	  <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.22.1</version>
        <reportSets>
          <reportSet>
            <id>integration-tests</id>
            <reports>
              <report>failsafe-report-only</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
  -->
    </plugins>
  </reporting>
</project>
